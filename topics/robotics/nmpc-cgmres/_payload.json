[{"data":1,"prerenderedAt":568},["Reactive",2],{"content-/topics/robotics/nmpc-cgmres":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"_empty":6,"title":8,"description":9,"author":10,"slug":11,"tag":11,"img":12,"body":13,"_type":563,"_id":564,"_source":565,"_file":566,"_extension":567},"/topics/robotics/nmpc-cgmres","robotics",false,"","Nonlinear Model Predictive Control with C/GMRES","Optimal Control theory","Din Sokheng","nmpc-cgmres","/topics/robotics/nmpc/nmpc-cgmres.png",{"type":14,"children":15,"toc":553},"root",[16,25,31,38,43,49,58,63,69,74,163,179,197,202,211,215,226,232,241,245,249,264,270,275,282,482,493,498,502,506,544,549],{"type":17,"tag":18,"props":19,"children":21},"element","h2",{"id":20},"the-optimal-control-theory-in-control-system",[22],{"type":23,"value":24},"text","The Optimal Control Theory in Control System",{"type":17,"tag":26,"props":27,"children":28},"p",{},[29],{"type":23,"value":30},"Optimal Control is a branch of control theory in control system, the theory works by solving the optimization problem of the dynamical system in order to find the optimal solution for the system",{"type":17,"tag":32,"props":33,"children":35},"h3",{"id":34},"what-is-model-predictive-control",[36],{"type":23,"value":37},"What is Model Predictive Control ?",{"type":17,"tag":26,"props":39,"children":40},{},[41],{"type":23,"value":42},"Model Predictive Control (MPC) is the optimal control method that use optimization algorithms to solve the cost function the occurs from the desired input and obtain back the optimal input control over the finite and infinite horizons. Recently, MPC is hyping up among the control system researcher, since it is fast, efficiency and robustness for any high complex system.",{"type":17,"tag":32,"props":44,"children":46},{"id":45},"hamilton-jacobian-bellman-equation-hjbe",[47],{"type":23,"value":48},"Hamilton Jacobian Bellman Equation (HJBE)",{"type":17,"tag":26,"props":50,"children":51},{},[52,54],{"type":23,"value":53},"Actually, the HJBE is a nonlinear partial differential equation that it consists necessary conditions for optimality of control by minimizing the loss function of the system. ",{"type":17,"tag":55,"props":56,"children":57},"br",{},[],{"type":17,"tag":26,"props":59,"children":60},{},[61],{"type":23,"value":62},"We have the Hamiltonian Jacobian Bellman Equation",{"type":17,"tag":64,"props":65,"children":68},"math-render-b",{"latex-express":66,"styles":67},"\n\\begin{equation}\n    H(x,u,\\lambda,\\mu) = \\sum_{k=0}^{N-1}(x_{k}-x_{k,ref})^{T} Q(x_{k}-x_{k,ref}) + (u_{k}-u_{k,ref})^{T}R(u_{k}-u_{k,ref}) + \n                         \\phi(x) + \\lambda^{T}f(x,u) + \\mu^{T}C(x,u)\n\\end{equation}","text-center",[],{"type":17,"tag":26,"props":70,"children":71},{},[72],{"type":23,"value":73},"Which",{"type":17,"tag":75,"props":76,"children":77},"ul",{},[78,90,105,118,127,136,145,154],{"type":17,"tag":79,"props":80,"children":81},"li",{},[82,88],{"type":17,"tag":83,"props":84,"children":87},"math-render",{"latex-express":85,"styles":86},"N","inline-flex",[],{"type":23,"value":89}," is the number of prediction future horizons or shooting node.",{"type":17,"tag":79,"props":91,"children":92},{},[93,97,99,103],{"type":17,"tag":83,"props":94,"children":96},{"latex-express":95,"styles":86},"x_{k}",[],{"type":23,"value":98}," is the state of the system at shooting node ",{"type":17,"tag":83,"props":100,"children":102},{"latex-express":101,"styles":86},"k",[],{"type":23,"value":104}," .",{"type":17,"tag":79,"props":106,"children":107},{},[108,112,114,117],{"type":17,"tag":83,"props":109,"children":111},{"latex-express":110,"styles":86},"u_{k}",[],{"type":23,"value":113}," is the input control of the system at shooting node ",{"type":17,"tag":83,"props":115,"children":116},{"latex-express":101,"styles":86},[],{"type":23,"value":104},{"type":17,"tag":79,"props":119,"children":120},{},[121,125],{"type":17,"tag":83,"props":122,"children":124},{"latex-express":123,"styles":86},"Q, R",[],{"type":23,"value":126}," are diagonal matrix which helps the optimization solving the nlp problem.",{"type":17,"tag":79,"props":128,"children":129},{},[130,134],{"type":17,"tag":83,"props":131,"children":133},{"latex-express":132,"styles":86},"f(x,u)",[],{"type":23,"value":135}," is the state representation of the system.",{"type":17,"tag":79,"props":137,"children":138},{},[139,143],{"type":17,"tag":83,"props":140,"children":142},{"latex-express":141,"styles":86},"C(x,u)",[],{"type":23,"value":144},"  is the constraint of the system.",{"type":17,"tag":79,"props":146,"children":147},{},[148,152],{"type":17,"tag":83,"props":149,"children":151},{"latex-express":150,"styles":86},"\\lambda",[],{"type":23,"value":153},"  is the costate vector for state representation.",{"type":17,"tag":79,"props":155,"children":156},{},[157,161],{"type":17,"tag":83,"props":158,"children":160},{"latex-express":159,"styles":86},"\\mu",[],{"type":23,"value":162},"  is the costate vector for the input control.",{"type":17,"tag":26,"props":164,"children":165},{},[166,168,174,176],{"type":23,"value":167},"Nonlinear Model Predictive Control has multiples solving method, but in this demonstration I will stick with the Continuation/GMRES method proposed by professor ",{"type":17,"tag":169,"props":170,"children":171},"strong",{},[172],{"type":23,"value":173}," Toshiyuki Ohtsuka ",{"type":23,"value":175},". ",{"type":17,"tag":55,"props":177,"children":178},{},[],{"type":17,"tag":26,"props":180,"children":181},{},[182,184,188,190,195],{"type":23,"value":183},"Supposed we want to obtain input control ",{"type":17,"tag":83,"props":185,"children":187},{"latex-express":186,"styles":86},"U(t) = [ u_{0}^{*}, \\cdots, u_{N-1}^{*} ]",[],{"type":23,"value":189},"   at sampling time $t$, we then define the discretization of ",{"type":17,"tag":169,"props":191,"children":192},{},[193],{"type":23,"value":194}," Euler Lagrangian Equation (ELE) ",{"type":23,"value":196},".",{"type":17,"tag":64,"props":198,"children":201},{"latex-express":199,"style":200},"\n\\begin{align}\n    x_{i+1}^{*}(t) &= x_{i}^{*}(t) + f(x_{i}^{*}(t), u_{i}^{*}(t))  \\\\\n    \\lambda_{i}^{*}(t) &= \\lambda_{i+1}^{*}(t) + \\frac{\\partial H}{\\partial x}\\left( x_{i}^{*}, u_{i}^{*}(t), \\lambda_{i+1}^{*}(t), \\mu_{i}^{*}(t) \\right) \\\\\n    \\lambda_{N}^{*}(t) &= \\frac{\\partial \\phi(x)}{\\partial x} \\\\\n    \\frac{\\partial H}{\\partial u} &\\left( x_{i}^{*}, u_{i}^{*}(t), \\lambda_{i+1}^{*}(t), \\mu_{i}^{*}(t) \\right) = 0 \\\\\n    C&(x_{i}^{*}(t),u_{i}^{*}(t)) = 0\n\\end{align}\n","text-ceneter",[],{"type":17,"tag":26,"props":203,"children":204},{},[205,207],{"type":23,"value":206},"To solve this nonlinear problem iteratively, we use Newton's method ",{"type":17,"tag":83,"props":208,"children":210},{"latex-express":209,"styles":86},"F(x,u)=0",[],{"type":17,"tag":64,"props":212,"children":214},{"latex-express":213,"styles":67},"\n\\begin{equation}\n    F(x,u) = \\begin{bmatrix}\n        \\frac{\\partial H}{\\partial u} \\left( x_{0}^{*}, u_{0}^{*}(t), \\lambda_{1}^{*}(t), \\mu_{0}^{*}(t) \\right) \\\\\n        C(x_{0}^{*}(t),u_{0}^{*}(t))  \\\\\n        \\vdots \\\\\n        \\frac{\\partial H}{\\partial u} \\left( x_{N-1}^{*}, u_{N-1}^{*}(t), \\lambda_{N}^{*}(t), \\mu_{N-1}^{*}(t) \\right) \\\\\n        C(x_{N-1}^{*}(t),u_{N-1}^{*}(t)) \\\\\n    \\end{bmatrix} = 0\n\\end{equation}",[],{"type":17,"tag":26,"props":216,"children":217},{},[218,220,224],{"type":23,"value":219},"Solving this problem directly will caused big computational complexity, hence we use Continuation to reduce the complexity of the ",{"type":17,"tag":83,"props":221,"children":223},{"latex-express":222,"styles":86},"F(x,u)",[],{"type":23,"value":225}," function and then solve it by using GMRES method.",{"type":17,"tag":32,"props":227,"children":229},{"id":228},"continuation",[230],{"type":23,"value":231},"Continuation",{"type":17,"tag":26,"props":233,"children":234},{},[235,237],{"type":23,"value":236},"Denote  ",{"type":17,"tag":83,"props":238,"children":240},{"latex-express":239,"styles":86},"\\zeta, \\alpha, h \\in{\\mathbb{R} }",[],{"type":17,"tag":64,"props":242,"children":244},{"latex-express":243,"styles":67},"\n\\begin{equation*}\n    \\frac{\\partial F}{\\partial u}(x,u) \\dot{u}(t) = -\\zeta F(x,u)(t)-\\frac{\\partial F}{\\partial x}(x,u)(t)\\dot{x}-\\frac{\\partial F}{\\partial t}(x,u)(t) \n\\end{equation*}",[],{"type":17,"tag":64,"props":246,"children":248},{"latex-express":247,"styles":67},"\n\\begin{equation*}\n    \\frac{F(x(t)+h\\dot{x}(t),u(t)+h\\dot{u}(t),t+h)-F(x+h\\dot{x}(t),u(t),t+h)}{h} = -\\zeta F(x(t),u(t), t) - \\frac{F(x+h\\dot{x}(t), u(t),t+h)-F(x(t), u(t), t)}{h}\n\\end{equation*}",[],{"type":17,"tag":26,"props":250,"children":251},{},[252,254,258,260],{"type":23,"value":253},"Let ",{"type":17,"tag":64,"props":255,"children":257},{"latex-express":256,"styles":67},"right=\\frac{F(x(t)+h\\dot{x}(t),u(t)+h\\dot{u}(t),t+h)-F(x+h\\dot{x}(t),u(t),t+h)}{h}",[],{"type":23,"value":259}," and ",{"type":17,"tag":64,"props":261,"children":263},{"latex-express":262,"styles":67},"left =  -\\zeta F(x(t),u(t), t) - \\frac{F(x+h\\dot{x}(t), u(t),t+h)-F(x(t), u(t), t)}{h}",[],{"type":17,"tag":32,"props":265,"children":267},{"id":266},"generalized-minimal-residue-method-gmres",[268],{"type":23,"value":269},"Generalized Minimal Residue Method (GMRES)",{"type":17,"tag":26,"props":271,"children":272},{},[273],{"type":23,"value":274},"The Generalized Minimal Residual (GMRES) algorithm is an iterative method for solving linear systems of equations. It is often used for large sparse linear systems.",{"type":17,"tag":276,"props":277,"children":279},"h4",{"id":278},"algorithm-description",[280],{"type":23,"value":281},"Algorithm Description",{"type":17,"tag":283,"props":284,"children":285},"ol",{},[286,341,448,467],{"type":17,"tag":79,"props":287,"children":288},{},[289,294,296],{"type":17,"tag":169,"props":290,"children":291},{},[292],{"type":23,"value":293},"Initialize",{"type":23,"value":295},":",{"type":17,"tag":75,"props":297,"children":298},{},[299,309,319],{"type":17,"tag":79,"props":300,"children":301},{},[302,304,308],{"type":23,"value":303},"Choose an initial guess for the solution, denoted as ",{"type":17,"tag":83,"props":305,"children":307},{"latex-express":306,"styles":86},"x_{0}",[],{"type":23,"value":196},{"type":17,"tag":79,"props":310,"children":311},{},[312,314,318],{"type":23,"value":313},"Set the residual vector ",{"type":17,"tag":83,"props":315,"children":317},{"latex-express":316,"styles":86},"r_{0}=\\left\\| Ax_{0}-b \\right\\|",[],{"type":23,"value":196},{"type":17,"tag":79,"props":320,"children":321},{},[322,324,328,330,334,336,340],{"type":23,"value":323},"Set ",{"type":17,"tag":83,"props":325,"children":327},{"latex-express":326,"styles":86},"v_{1}=\\frac{r_{0} }{\\left\\| r_{0} \\right\\|}",[],{"type":23,"value":329},", where ",{"type":17,"tag":83,"props":331,"children":333},{"latex-express":332,"styles":86},"\\left\\| r_{0} \\right\\|",[],{"type":23,"value":335},"  is the norm of ",{"type":17,"tag":83,"props":337,"children":339},{"latex-express":338,"styles":86},"r_{0}",[],{"type":23,"value":196},{"type":17,"tag":79,"props":342,"children":343},{},[344,349,350],{"type":17,"tag":169,"props":345,"children":346},{},[347],{"type":23,"value":348},"Iterative Process",{"type":23,"value":295},{"type":17,"tag":75,"props":351,"children":352},{},[353,363,437],{"type":17,"tag":79,"props":354,"children":355},{},[356,358,362],{"type":23,"value":357},"Choose a vector ",{"type":17,"tag":83,"props":359,"children":361},{"latex-express":360,"styles":86},"v_{1}",[],{"type":23,"value":196},{"type":17,"tag":79,"props":364,"children":365},{},[366,368,372,374,378,379],{"type":23,"value":367},"For ",{"type":17,"tag":83,"props":369,"children":371},{"latex-express":370,"styles":86},"k=0",[],{"type":23,"value":373}," to ",{"type":17,"tag":83,"props":375,"children":377},{"latex-express":376,"styles":86},"maxiteration",[],{"type":23,"value":295},{"type":17,"tag":75,"props":380,"children":381},{},[382,418],{"type":17,"tag":79,"props":383,"children":384},{},[385,387],{"type":23,"value":386},"Arnoldi process:",{"type":17,"tag":75,"props":388,"children":389},{},[390,397,404,411],{"type":17,"tag":79,"props":391,"children":392},{},[393],{"type":17,"tag":83,"props":394,"children":396},{"latex-express":395,"styles":86},"h_{i,j} = \\left(Av_{j}, v_{i} \\right)",[],{"type":17,"tag":79,"props":398,"children":399},{},[400],{"type":17,"tag":83,"props":401,"children":403},{"latex-express":402,"styles":86},"\\hat{v}_{j+1} = Av_{j} - \\sum_{i=1}^{j}h_{i,j}v_{i}",[],{"type":17,"tag":79,"props":405,"children":406},{},[407],{"type":17,"tag":83,"props":408,"children":410},{"latex-express":409,"styles":86},"h_{j+1,j} = \\left \\| \\hat{v}_{j+1}  \\right\\|_{2}",[],{"type":17,"tag":79,"props":412,"children":413},{},[414],{"type":17,"tag":83,"props":415,"children":417},{"latex-express":416,"styles":86},"v_{j+1} = \\frac{\\hat{v}_{j+1} }{h_{j+1,j} }",[],{"type":17,"tag":79,"props":419,"children":420},{},[421,423],{"type":23,"value":422},"Check for convergence:",{"type":17,"tag":75,"props":424,"children":425},{},[426],{"type":17,"tag":79,"props":427,"children":428},{},[429,431,435],{"type":23,"value":430},"If ",{"type":17,"tag":83,"props":432,"children":434},{"latex-express":433,"styles":86},"||r_k|| \u003C tolerance",[],{"type":23,"value":436},", exit the loop.",{"type":17,"tag":79,"props":438,"children":439},{},[440,442,446],{"type":23,"value":441},"If no convergence is achieved after ",{"type":17,"tag":83,"props":443,"children":445},{"latex-express":444,"styles":86},"maxiterations",[],{"type":23,"value":447},", exit with an error message.",{"type":17,"tag":79,"props":449,"children":450},{},[451,460,462,466],{"type":17,"tag":169,"props":452,"children":453},{},[454,456],{"type":23,"value":455},"Find ",{"type":17,"tag":83,"props":457,"children":459},{"latex-express":458,"styles":86},"y",[],{"type":23,"value":461},": which minimize ",{"type":17,"tag":83,"props":463,"children":465},{"latex-express":464,"styles":86},"\\left\\| r_{0}e_{1}-\\hat{H}_{m}y \\right \\|_{2}",[],{"type":23,"value":196},{"type":17,"tag":79,"props":468,"children":469},{},[470,475,477,481],{"type":17,"tag":169,"props":471,"children":472},{},[473],{"type":23,"value":474},"Compute",{"type":23,"value":476},": ",{"type":17,"tag":83,"props":478,"children":480},{"latex-express":479,"styles":86},"x_{m} = x_{0}+V_{m}y_{m}",[],{"type":23,"value":196},{"type":17,"tag":26,"props":483,"children":484},{},[485,487,491],{"type":23,"value":486},"For example differential model, let ",{"type":17,"tag":83,"props":488,"children":490},{"latex-express":489,"styles":86},"x, y, \\phi",[],{"type":23,"value":492}," is the state presentation of the model\n$$ \\dot{x} = f(x,u) $$",{"type":17,"tag":26,"props":494,"children":495},{},[496],{"type":23,"value":497},"Then the HJBE defined as",{"type":17,"tag":64,"props":499,"children":501},{"latex-express":500,"styles":67},"\n\\begin{equation}\n    H(x,u,\\lambda,\\mu) = \\sum_{k=0}^{N-1}(x_{k}-x_{k,ref})^{T}Q(x_{k}-x_{k,ref}) + (u_{k}-u_{k,ref})^{T}R(u_{k}-u_{k,ref}) + \n                         \\phi(x) + \\lambda^{T}f(x,u) + \\mu^{T}C(x,u)\n\\end{equation}\n",[],{"type":17,"tag":26,"props":503,"children":504},{},[505],{"type":23,"value":73},{"type":17,"tag":75,"props":507,"children":508},{},[509,516,523,530,537],{"type":17,"tag":79,"props":510,"children":511},{},[512],{"type":17,"tag":83,"props":513,"children":515},{"latex-express":514,"styles":86},"f(x,u) = \\begin{bmatrix} u_{1}*\\cos{(\\phi)} \\\\ u_{1}*\\sin{(\\phi)} \\\\ u_{2} \\end{bmatrix}",[],{"type":17,"tag":79,"props":517,"children":518},{},[519],{"type":17,"tag":83,"props":520,"children":522},{"latex-express":521,"styles":86},"C(x,u) = \\begin{bmatrix} \\left(u_{1}+\\frac{u_{1max}+u_{1min}}{2}\\right)^{2}+u_{1dummy}^{2}-(\\frac{u_{1max}-u_{1min}}{2})^{2} \\\\\n          \\left(u_{2}+\\frac{u_{2max}+u_{2min}}{2}\\right)^{2}+u_{2dummy}^{2}-(\\frac{u_{2max}-u_{2min}}{2})^{2}\n\\end{bmatrix}",[],{"type":17,"tag":79,"props":524,"children":525},{},[526],{"type":17,"tag":83,"props":527,"children":529},{"latex-express":528,"styles":86},"\\phi(x) = (x_{N-1}x_{N-1,ref})^{T}Q(x_{N-1}x_{N-1,ref})",[],{"type":17,"tag":79,"props":531,"children":532},{},[533],{"type":17,"tag":83,"props":534,"children":536},{"latex-express":535,"styles":86},"\\lambda = \\begin{bmatrix} \\lambda_{1} & \\lambda_{2} & \\lambda_{3} \\end{bmatrix}",[],{"type":17,"tag":79,"props":538,"children":539},{},[540],{"type":17,"tag":83,"props":541,"children":543},{"latex-express":542,"styles":86}," \\mu = \\begin{bmatrix} \\mu_{1} & \\mu_{2} \\end{bmatrix}",[],{"type":17,"tag":26,"props":545,"children":546},{},[547],{"type":23,"value":548},"Subtitute all of these term into HJBE",{"type":17,"tag":64,"props":550,"children":552},{"latex-express":551,"styles":67},"\n\\begin{align*}\nH(x,u,\\lambda,\\mu) &= \\sum_{k=0}^{N-1}(x_{k}-x_{k,ref})^{T}Q(x_{k}-x_{k,ref}) + (u_{k}-u_{k,ref})^{T}R(u_{k}-u_{k,ref})\n                     + (x_{N-1}-x_{N-1,ref})^{T}Q(x_{N-1}-x_{N-1,ref}) \\\\ & + \\begin{bmatrix} \\lambda_{1} \\\\ \\lambda_{2} \\\\ \\lambda_{3} \\end{bmatrix}^{T} \\begin{bmatrix} u_{1}*\\cos(\\phi) \\\\ u_{1}*\\sin(\\phi) \\\\ u_{2} \\end{bmatrix}\n                     + \\begin{bmatrix} \\mu_{1} \\\\ \\mu_{2} \\end{bmatrix}^{T} \\begin{bmatrix} \\left(u_{1}+\\frac{u_{1max}+u_{1min}}{2}\\right)^{2}+u_{1dummy}^{2}-(\\frac{u_{1max}-u_{1min}}{2})^{2} \\\\\n            \\left(u_{2}+\\frac{u_{2max}+u_{2min}}{2}\\right)^{2}+u_{2dummy}^{2}-(\\frac{u_{2max}-u_{2min}}{2})^{2} \n\\end{bmatrix}\n\\end{align*}",[],{"title":7,"searchDepth":554,"depth":554,"links":555},2,[556],{"id":20,"depth":554,"text":24,"children":557},[558,560,561,562],{"id":34,"depth":559,"text":37},3,{"id":45,"depth":559,"text":48},{"id":228,"depth":559,"text":231},{"id":266,"depth":559,"text":269},"markdown","content:topics:robotics:nmpc-cgmres.md","content","topics/robotics/nmpc-cgmres.md","md",1696322306145]